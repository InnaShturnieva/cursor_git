LINUX

1. mkdir linux_lecture && touch notes.txt
2. cp notes.txt linux_lecture
3. ls -l
4. ls -l -r
5. mv notes.txt new_notes.txt
6. rm linux_lecture/notes.txt new_notes.txt
cd linux_lecture && touch homework.sh
7. touch -m -t 202001010415.00 homework.sh
stat homework.sh
touch hw.sh hw1.sh hw2.sh hw1.txt
8. find *.txt
9. mkdir lecture_new
cp *.txt lecture_new
10. echo 'echo "linux_lecture"' > homework.sh
11. cat homework.sh
12. sudo chmod 200 homework.sh
cat homework.sh
13. sudo chmod 700 homework.sh
cat homework.sh
13a. ./homework.sh
14. seq 1 10 > homework.sh
cat homework.sh
15. head -n7 homework.sh
16.touch notes.sh && echo 'ls' > notes.sh
sudo chmod 777 notes.sh
17. ./notes.sh

GIT

1. mkdir cursor_git
2. cd cursor_git
3. touch first.py
4. git init
git add first.py
5. git commit -m "adding first.py"
6. git log -1
7. touch second.py
8. git add second.py
9. git commit -m "adding second.py"
10. git rm first.py
11. git add -u
12. git commit -m "removing first.py"
13. git log -1
14. git remote add origin https://github.com/InnaShturnieva/cursor_git.git
git push -u origin master
15. git branch first
16. git checkout -b second
17. echo "print('Hello')" > second.py
18. git stash
git checkout first
19. git checkout second
git stash pop
20. git add -u
21. git commit -m "Changing second.py"
22. git push -u origin second
23. git checkout first
24. echo 'print("Cursor")' > second.py
25. git add -u
26. git commit -m "Changing second.py"
27. git push -u origin first
28. git checkout master
29. git merge second
30. git merge first
31. git status
git add second.py
git status
git commit -m "conflict was resolved"
git status
git push origin master
